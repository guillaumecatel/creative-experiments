name: CI/CD Pipeline

on:
  push:
    branches: ['**']
    tags: ['v*']
  pull_request:
    branches: ['**']

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  lint-and-test:
    name: 🔍 Lint, Format & Test
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4

      - name: 🤓 Read .nvmrc
        id: nvm
        run: echo "NODE_VERSION=$(cat .nvmrc)" >> $GITHUB_OUTPUT

      - name: 📦 Install PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: 🟢 Setup Node.js ${{ steps.nvm.outputs.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ steps.nvm.outputs.NODE_VERSION }}
          cache: 'pnpm'

      - name: 📥 Install dependencies
        run: pnpm install

      - name: 💅 Lint
        run: pnpm lint

      - name: 🧼 Format
        run: pnpm format

      - name: 🧪 Unit tests
        run: pnpm test:unit

      - name: 🚀 E2E tests
        run: pnpm test:e2e

      - name: 🏗️ Build
        run: pnpm build

  build-prod:
    name: 🏗️ Build and upload production
    runs-on: ubuntu-latest
    needs: lint-and-test
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4

      - name: 🤓 Read .nvmrc
        id: nvm
        run: echo "NODE_VERSION=$(cat .nvmrc)" >> $GITHUB_OUTPUT

      - name: 📦 Install PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ steps.nvm.outputs.NODE_VERSION }}
          cache: 'pnpm'

      - name: 📥 Install dependencies
        run: pnpm install

      - name: 🏗️ Build
        run: pnpm build

      - name: 📤 Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./storybook-static

  deploy:
    name: 🚀 Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: build-prod
    if: startsWith(github.ref, 'refs/tags/v')
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: 🚀 Deploy
        id: deployment
        uses: actions/deploy-pages@v4
